<Window x:Class="DQB2ChunkEditor.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:control="clr-namespace:DQB2ChunkEditor.Controls"
        mc:Ignorable="d"
        Title="DQB2 Chunk Editor+" Height="600" MinHeight="600" Width="1100" MinWidth="1100" WindowStartupLocation="CenterScreen" WindowState="Normal" SnapsToDevicePixels="True"
        Icon="/Images/Icon.png">
    <Window.Resources>
        <Style TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        </Style>
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="0.5" />
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <DockPanel>
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True" Padding="5,0,0,0" Height="30">
                <Button Name="OpenFile" Height="24" Width="24" ToolTip="Open" Click="OpenFile_OnClick">
                    <Image Source="/Images/Open.png" />
                </Button>
                <Button Name="SaveFile"  Height="24" Width="24" ToolTip="Save" Click="SaveFile_OnClick">
                    <Image Source="/Images/Save.png" />
                </Button>
                <Separator/>
                <Button Name="ExportFile"  Height="24" Width="24" ToolTip="Export" Click="ExportFile_OnClick">
                    <Image Source="/Images/Export.png" />
                </Button>
                <Button Name="ImportFile"  Height="24" Width="24" ToolTip="Import" Click="ImportFile_OnClick">
                    <Image Source="/Images/Import.png" />
                </Button>
                <Separator/>
                <RadioButton Name="SelectButton" Height="24" Width="24" ToolTip="Select" IsChecked="True" Click="EraseRect_OnClick">
                    <Image Source="/Images/Select.png" />
                </RadioButton>
                <RadioButton Name="PasteButton" Height="24" Width="24" ToolTip="Paste" Click="EraseRect_OnClick">
                    <Image Source="/Images/Paste.png" />
                </RadioButton>
                <RadioButton Name="PencilButton"  Height="24" Width="24" ToolTip="Select Area" Click="EraseRect_OnClick">
                    <Image Source="/Images/Pencil.png" />
                </RadioButton>
                <Separator/>
                <Button Name="ReplaceButton"  Height="24" Width="24" ToolTip="Replace Blocks" Click="ReplaceBlocks_OnClick">
                    <Image Source="/Images/Replace.png" />
                </Button>
                <Separator/>
                <Button Name="FlattenerButton"  Height="24" Width="24" ToolTip="Flatten Island" Click="Flattener_OnClick">
                    <Image Source="/Images/Flat.png" />
                </Button>
        <Button Name="DrainButton"  Height="24" Width="24" ToolTip="Remove all Liquid" Click="Drainer_OnClick">
          <Image Source="/Images/Drain.png" />
        </Button>
        <Button Name="MassSelectButton"  Height="24" Width="24" ToolTip="Mass Select (TEMPORAL)" Click="MassSelect_OnClick">
                    <Image Source="/Images/SelectionTool.png" />
                </Button>
                <Button Name="MassSet"  Height="24" Width="24" ToolTip="Mass Set (TEMPORAL)" Click="MassSet_OnClick">
                    <Image Source="/Images/Blocks/0003.png" />
                </Button>
                <Separator/>
                <Button Name="ChangeSize"  Height="24" Width="24" ToolTip="Edit Chunk Count (TEMPORAL)" Click="Size_OnClick">
                    <Image Source="/Images/Temporal.png" />
                </Button>
        <Separator/>
        <Button Name="InfoButton"  Height="24" Width="28" ToolTip="Print out data" Click="Print_OnClick">
          <Image Source="/Images/Info.png"/>
        </Button>
        <Image x:Name="Loading" Source="/Images/Loading2.png" Height="24" MaxHeight="24" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <Image x:Name="Saving" Source="/Images/Saving.png" Height="24" MaxHeight="24" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"/>
      </ToolBar>
            <TabControl>
                <TabItem Header="Chunk Editor">
                    <Grid Name="CentralGrid" Margin="0,0,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="One" Width="auto" MinWidth = "500"/>
                            <ColumnDefinition Name="Two" Width="auto" MinWidth="550" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="20,10,0,0" DockPanel.Dock="Left">
              <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Name="Select" Height="270*"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="210"/>
                            </Grid.RowDefinitions>
              <TextBlock Height="10"/>
              <StackPanel VerticalAlignment="Top" Orientation="Horizontal" Grid.Column="0" Height="20" Margin="0,8,0,0" HorizontalAlignment="Center">
                <TextBlock Text="Chunk" Width="50" TextAlignment="Center" />
                <Button Name="AddChunk" Width="20" FontWeight="Bold" Click="AddChunk_OnClick">+</Button>
                <Border Style="{StaticResource BorderStyle}">
                  <TextBlock Name="ChunkInput" Text="{Binding Path=ChunkValue.Value, RelativeSource={RelativeSource AncestorType=Window}}" Width="30" TextAlignment="Center" MouseUp="ChunkInput_OnMouseUp" />
                </Border>
                <Button Name="SubChunk" Width="20" FontWeight="Bold" Click="SubChunk_OnClick">-</Button>
                <TextBlock Width="10"/>
                <TextBlock Text="Layer" Width="40" TextAlignment="Center" />
                <Button Name="AddLayer" Width="20" FontWeight="Bold" Click="AddLayer_OnClick">+</Button>
                <Border Style="{StaticResource BorderStyle}">
                  <TextBlock Name="LayerInput" Text="{Binding Path=LayerValue.Value, RelativeSource={RelativeSource AncestorType=Window}}" Width="30" TextAlignment="Center" MouseUp="LayerInput_OnMouseUp" />
                </Border>
                <Button Name="SubLayer" Width="20" FontWeight="Bold" Click="SubLayer_OnClick">-</Button>
              </StackPanel>
              <TextBlock Height="10" Grid.Row="1"/>
              <control:BlockGrid  Grid.Row="1" x:Name="ButtonGrid"/>
              <TextBlock Height="10" Grid.Row="1"/>
              <StackPanel Grid.Row="2" Width="420" VerticalAlignment="Center" Orientation="Horizontal">
                                <ComboBox Name="TileComboBox" Height="34" Width = "265" SelectedItem="{Binding SelectedTile, RelativeSource={RelativeSource AncestorType=Window}}" SelectionChanged="TileComboBox_OnSelectionChange" ItemsSource="{Binding TileComboBoxList, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <Grid Grid.Column="0" Width = "145">
                                    <control:overflowCheckbox x:Name="overflowCheckboxName" CheckedChanged="UpdateIdSelected_OnClick" VerticalAlignment="Top" Margin="10,0,10,0"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Grid.Row="3">
                                <TextBlock Text="{Binding StringFormat=ID: {0}, Path=SelectedTile.Value.Id, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Name="RawIDT" />
                                <TextBlock Name="OverflowT" />
                                <TextBlock/>
                                <TextBlock Text="{Binding StringFormat=Type: {0}, Path=SelectedTile.Value.Type, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Name: {0}, Path=SelectedTile.Value.Name, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Description: {0}, Path=SelectedTile.Value.Description, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Can be broken by: {0}, Path=SelectedTile.Value.Break, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Drops: {0}, Path=SelectedTile.Value.NormalDrop, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Ultimallet Drops: {0}, Path=SelectedTile.Value.UltimalletDrop, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <TextBlock Text="{Binding StringFormat=Used: {0}, Path=SelectedTile.Value.Used, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </StackPanel>
                        </Grid>
                        <Grid Grid.Column="1" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right">
                            <Viewbox Stretch="Uniform">
                                <Grid>
                                    <UniformGrid Visibility="Hidden" Name="LayerTiles" Columns="32" Rows="32" Grid.ZIndex="0"/>
                                    <UniformGrid Name="MinimapTileGrid" Columns="4" Rows="4" Grid.ZIndex="0">
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                        <Rectangle Stroke="Black"/>
                                    </UniformGrid>
                                    <Canvas x:Name="SelectionCanvas" Background="Transparent" VerticalAlignment="Stretch" Grid.ZIndex="1" IsHitTestVisible="False"/>
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Value Editors">
                    <Grid Background="#FFE5E5E5" x:Name="Pain">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" MinWidth = "400"/>
              <ColumnDefinition Width="auto" MinWidth="600" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="2*"/>
            <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Column="0" Width="450" VerticalAlignment="Top" Orientation="Vertical" HorizontalAlignment="Left" Margin="15,15,0,0">
              <StackPanel Width="450" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0" Height="45">
                                <Image Source="/Images/Gratitude.png" Height="60" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBlock Text="Gratitude(ERROR): " VerticalAlignment="Center" FontSize="12" Margin="5,0,0,0" Width="55" TextWrapping="WrapWithOverflow"/>
                                <TextBlock Name="GratitudeInput" TextAlignment="Right" Text="{Binding ChunkEditor.GratitudePoints, BindsDirectlyToSource=True, FallbackValue=0, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Width="297" Margin="20,0,0,0" Padding="5,0,10,0" VerticalAlignment="Center" />
                            </StackPanel>
              <StackPanel Width="450" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0" Height="45">
                                <Image Source="/Images/Clock.png" Height="60" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBlock Text="Time: " VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12" Margin="5,0,0,0" Height="20" Width="55"/>
                                <TextBox Name="TimeInput" Text="{Binding ChunkEditor.Clock, BindsDirectlyToSource=True, FallbackValue=0, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Height="25" Width="300" Margin="20,0,0,0" Padding="5,0,10,0" TextChanged="TimeInput_TextChanged" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" />
                            </StackPanel>
              <StackPanel Width="450" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0" Height="45">
                                <Image Source="/Images/Weather.png" Height="60" Width="30" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBlock Text= "Weather: " VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12" Margin="5,0,0,0" Width="55" Height="20"/>
                                <ComboBox Name="WeatherComboBoxX" Height="35" Width = "300" SelectedItem="{Binding SelectedWeather, RelativeSource={RelativeSource AncestorType=Window}}" SelectionChanged="SetWeather_OnClick" ItemsSource="{Binding WeatherComboBox, RelativeSource={RelativeSource AncestorType=Window}}" Margin="20,0,0,0" />
                            </StackPanel>
                        </StackPanel>
            <ListBox x:Name="List" Grid.Column="1">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <Label Margin="5,0,0,0" Content="Index"/>
                    <Label Content="{Binding Index}" Width="40"/>
                    <Label Content="Line" Margin="5,0,0,0"/>
                    <TextBox Text="{Binding Line}" TextWrapping="WrapWithOverflow" Width="400" BorderBrush="{x:Null}" SelectionTextBrush="#FFA6F9FF" Background="{x:Null}" CaretBrush="{x:Null}"/>
                    <Button Content="Preview" Tag="{Binding Line}" Click="CommandPreview"/>
                  </StackPanel>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
                        <TextBlock  Grid.Row="0" Grid.RowSpan="2" TextWrapping="Wrap" Margin="5,160,5,0"><Run Text="OP CODES IMPLEMENTED:"/><LineBreak/><Run Text="&lt;pname&gt; : Builder name"/><LineBreak/><Run Text="&lt;cap&gt; : capitalizes next word"/><LineBreak/><Run Text="&lt;off&gt; : Rubiss style textbox"/><LineBreak/><Run Text="&lt;morph(male,female)&gt; changes word depending on gender"/><LineBreak/><Run Text="&lt;key&gt; : waits for you to press A"/><LineBreak/><Run Text="&lt;br&gt; : line break"/><LineBreak/><Run Text="&lt;$iname("/><Run Text="__"/><Run Text=")&gt; : name of item"/><LineBreak/><Run Text="&lt;$iicon("/><Run Language="es-es" Text="__"/><Run Text=")&gt;"/><Run Text=" : icon of item"/><LineBreak/><Run Text="&lt;$cdef(__)&gt;: changes text colour"/><LineBreak/><Run Text="&lt;/color&gt; : returns colour to white"/><LineBreak/><Run Text="&lt;note&gt; : ♩"/><LineBreak/><Run/></TextBlock>
                    </Grid>
                </TabItem>
            </TabControl>

        </DockPanel>
    </Grid>
</Window>
